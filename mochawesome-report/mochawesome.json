{
  "stats": {
    "suites": 1,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2023-03-09T17:29:38.561Z",
    "end": "2023-03-09T17:29:40.702Z",
    "duration": 2141,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "7dce1457-d2cb-4b17-9d19-cf95374df288",
      "title": "",
      "fullFile": "/Users/msigid10/Documents/test-api/UserLogin.js",
      "file": "/UserLogin.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "bb60c3e4-81a4-4536-b1fc-465cb1fba476",
          "title": "POST ",
          "fullFile": "/Users/msigid10/Documents/test-api/UserLogin.js",
          "file": "/UserLogin.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "user login",
              "fullTitle": "POST  user login",
              "timedOut": false,
              "duration": 668,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n  .post(\"/authaccount/login\")\n  .send({\n    \"email\": \"belajar99@gmail.com\",\n    \"password\": \"password23\"\n  });\n  \n  \n  expect(response.status).to.eql(200);\n  expect(response.body.message).to.eql(\"success\");\n  nameUser = response.body.data.name;\n  expect(response.body.data.name).to.eql(nameUser);\n  token = response.body.data.Token;",
              "err": {},
              "uuid": "89b21631-3cab-46bb-84b6-3e216b05b72a",
              "parentUUID": "bb60c3e4-81a4-4536-b1fc-465cb1fba476",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "create new user",
              "fullTitle": "POST  create new user",
              "timedOut": false,
              "duration": 473,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n  .post(\"/users\")\n  .send({\n    \"name\": \"Prasetyo\",\n    \"email\": \"prasetyo666@gmail.com\",\n    \"location\":\"USA\"\n  })\n  \n  .set({ 'Authorization': `Bearer ${token}` });\n  console.log(response.body)\n  expect(response.status).to.eql(201);\n  newNameUser = response.body.name;\n  expect(response.body.name).to.eql(newNameUser);\n  userId = response.body.id;",
              "err": {},
              "uuid": "60ffd1af-48f7-4940-ae08-36284fa9f2da",
              "parentUUID": "bb60c3e4-81a4-4536-b1fc-465cb1fba476",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "get user by id",
              "fullTitle": "POST  get user by id",
              "timedOut": false,
              "duration": 567,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n  .get(`/users/${userId}`)\n  .set({ 'Authorization': `Bearer ${token}` });\n  \n  console.log(response.body)\n  expect(response.status).to.eql(200);\n  expect(response.body.id).to.eql(userId);",
              "err": {},
              "uuid": "a73b87b0-7363-4e07-b30e-24591e931e95",
              "parentUUID": "bb60c3e4-81a4-4536-b1fc-465cb1fba476",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "update user",
              "fullTitle": "POST  update user",
              "timedOut": false,
              "duration": 425,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await request\n  .post(`/users/${userId}`)\n  .send({\n    \"id\": userId,\n\t        \"name\":\"Prasetyo Edited\",\n\t        \"email\":\"ngantuukk888@gmail.com\",\n\t        \"location\":\"USA\"\n  })\n  .set({ 'Authorization': `Bearer ${token}` });\n  // console.log(response.body)\n  expect(response.status).to.eql(201);\n  nameUserUpdate = response.body.name;\n  expect(response.body.name).to.eql(nameUserUpdate);",
              "err": {},
              "uuid": "5c0742ae-2ed3-4ef8-b025-0fc71f1f724a",
              "parentUUID": "bb60c3e4-81a4-4536-b1fc-465cb1fba476",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "89b21631-3cab-46bb-84b6-3e216b05b72a",
            "60ffd1af-48f7-4940-ae08-36284fa9f2da",
            "a73b87b0-7363-4e07-b30e-24591e931e95",
            "5c0742ae-2ed3-4ef8-b025-0fc71f1f724a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2133,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}